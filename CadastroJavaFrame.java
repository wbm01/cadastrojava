//******************************************************
//Instituto Federal de São Paulo - Campus Sertãozinho
//Disciplina......: M3LPBD
//Programação de Computadores e Dispositivos Móveis
//Aluno...........: Willian Barboza Marioti
//******************************************************
package cadastrojava;

import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.SQLException;
import javafx.scene.control.ToolBar;
import javax.swing.JOptionPane;
import javax.swing.border.BevelBorder;
import javax.swing.border.LineBorder;
import javax.swing.border.StrokeBorder;
import javax.swing.border.TitledBorder;
import javax.swing.plaf.basic.BasicBorders;
import javax.swing.plaf.metal.MetalBorders;
import javax.swing.plaf.synth.SynthButtonUI;

/**
 *
 * @author Willian
 */
public class CadastroJavaFrame extends javax.swing.JFrame {

    /**
     * Creates new form CadastroJavaFrame
     */
    public CadastroJavaFrame() { //Iniciará os componentes e chamará o loadcampo.
        initComponents();
        loadcampo();
        
    }
    private void loadcampo(){ //Ao executar o programa, aparecerá esses dados em cinza como exemplo de como o usuário deve digitar.
    jTextFieldNome.setText("Ex.: Lógica");
    jTextFieldNome.setFont(getFont().deriveFont(Font.ITALIC));
    jTextFieldNome.setForeground(Color.GRAY);
    jTextFieldCarga.setText("Ex.: 100");
    jTextFieldCarga.setFont(getFont().deriveFont(Font.ITALIC));
    jTextFieldCarga.setForeground(Color.GRAY);
    jTextFieldCurso.setText("Ex.: Ciências da Computação");
    jTextFieldCurso.setFont(getFont().deriveFont(Font.ITALIC));
    jTextFieldCurso.setForeground(Color.GRAY);
    jTextFieldVagas.setText("Ex.: 100");
    jTextFieldVagas.setFont(getFont().deriveFont(Font.ITALIC));
    jTextFieldVagas.setForeground(Color.GRAY);
}
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jTextFieldCarga = new javax.swing.JTextField();
        jTextFieldCurso = new javax.swing.JTextField();
        jTextFieldVagas = new javax.swing.JTextField();
        jButtonSalvar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jComboBoxPeriodo = new javax.swing.JComboBox<>();
        jLabelCampo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Nome");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Carga Horária");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Curso");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Vagas");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Período");

        jTextFieldNome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldNome.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextFieldNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldNomeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldNomeFocusLost(evt);
            }
        });
        jTextFieldNome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldNomeMouseClicked(evt);
            }
        });
        jTextFieldNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNomeKeyTyped(evt);
            }
        });

        jTextFieldCarga.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldCarga.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldCargaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCargaFocusLost(evt);
            }
        });
        jTextFieldCarga.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldCargaMouseClicked(evt);
            }
        });
        jTextFieldCarga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCargaKeyTyped(evt);
            }
        });

        jTextFieldCurso.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldCurso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldCursoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCursoFocusLost(evt);
            }
        });
        jTextFieldCurso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldCursoMouseClicked(evt);
            }
        });
        jTextFieldCurso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCursoKeyTyped(evt);
            }
        });

        jTextFieldVagas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldVagas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldVagasFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldVagasFocusLost(evt);
            }
        });
        jTextFieldVagas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldVagasMouseClicked(evt);
            }
        });
        jTextFieldVagas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldVagasKeyTyped(evt);
            }
        });

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jComboBoxPeriodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "Manhã", "Tarde", "Noite" }));

        jLabelCampo.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabelCampo.setText("    ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldVagas, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldCarga, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(4, 4, 4)
                        .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jButtonSalvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonCancelar))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelCampo)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldCarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldVagas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBoxPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCampo))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Apagará o nome em cinza do exemplo, passará o texto digitado pelo usuário para regular e com a cor preto.
    private void jTextFieldNomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldNomeMouseClicked
        jTextFieldNome.setText("");
        jTextFieldNome.setFont(getFont().deriveFont(Font.PLAIN));
        jTextFieldNome.setForeground(Color.BLACK);
    }//GEN-LAST:event_jTextFieldNomeMouseClicked
    //Após o cursor sair do campo que estava, e este campo não foi preenchido pelo usuário, voltará o exemplo de como o usuário deve digitar, mas com a borda vermelha, como um aviso.
    //E ao voltar e digitar, o campo voltará a sua cor original.
    private void jTextFieldNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNomeFocusLost
        if(jTextFieldNome.getText().isEmpty()) {
        jTextFieldNome.setText("Ex.: Lógica");
        jTextFieldNome.setFont(getFont().deriveFont(Font.ITALIC));
        jTextFieldNome.setForeground(Color.GRAY);
       }
        if(jTextFieldNome.getText().equals("Ex.: Lógica")){
          jTextFieldNome.setBorder(new LineBorder(Color.RED)); 
        }else{
            jTextFieldNome.getText();
            jTextFieldNome.setBorder(MetalBorders.getDesktopIconBorder());
        }
    }//GEN-LAST:event_jTextFieldNomeFocusLost
    //Apagará o nome em cinza do exemplo, passará o texto digitado pelo usuário para regular e com a cor preto.
    private void jTextFieldCargaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldCargaMouseClicked
        jTextFieldCarga.setText("");
        jTextFieldCarga.setFont(getFont().deriveFont(Font.PLAIN));
        jTextFieldCarga.setForeground(Color.BLACK);
        
    }//GEN-LAST:event_jTextFieldCargaMouseClicked
    //Após o cursor sair do campo que estava, e este campo não foi preenchido pelo usuário, voltará o exemplo de como o usuário deve digitar, mas com a borda vermelha, como um aviso.
    //E ao voltar e digitar, o campo voltará a sua cor original.
    private void jTextFieldCargaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCargaFocusLost
        if(jTextFieldCarga.getText().isEmpty()) {
        jTextFieldCarga.setText("Ex.: 100");
        jTextFieldCarga.setFont(getFont().deriveFont(Font.ITALIC));
        jTextFieldCarga.setForeground(Color.GRAY);
    }
        if(jTextFieldCarga.getText().equals("Ex.: 100")){
          jTextFieldCarga.setBorder(new LineBorder(Color.RED)); 
        }else{
            jTextFieldCarga.getText();
            jTextFieldCarga.setBorder(MetalBorders.getDesktopIconBorder());
        }
    }//GEN-LAST:event_jTextFieldCargaFocusLost
    //Apagará o nome em cinza do exemplo, passará o texto digitado pelo usuário para regular e com a cor preto.
    private void jTextFieldCursoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldCursoMouseClicked
        jTextFieldCurso.setText("");
        jTextFieldCurso.setFont(getFont().deriveFont(Font.PLAIN));
        jTextFieldCurso.setForeground(Color.BLACK);
    }//GEN-LAST:event_jTextFieldCursoMouseClicked
    //Após o cursor sair do campo que estava, e este campo não foi preenchido pelo usuário, voltará o exemplo de como o usuário deve digitar, mas com a borda vermelha, como um aviso.
    //E ao voltar e digitar, o campo voltará a sua cor original.
    private void jTextFieldCursoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCursoFocusLost
        if(jTextFieldCurso.getText().isEmpty()) {
        jTextFieldCurso.setText("Ex.: Ciências da Computação");
        jTextFieldCurso.setFont(getFont().deriveFont(Font.ITALIC));
        jTextFieldCurso.setForeground(Color.GRAY);
}
        if(jTextFieldCurso.getText().equals("Ex.: Ciências da Computação")){
          jTextFieldCurso.setBorder(new LineBorder(Color.RED)); 
        }else{
            jTextFieldCurso.getText();
            jTextFieldCurso.setBorder(MetalBorders.getDesktopIconBorder());
        }
    }//GEN-LAST:event_jTextFieldCursoFocusLost
    //Se o usuário mudar de campo com o TAB, ao invés do Mouse, ocorrerá o mesmo evento do MouseClicked.
    //Apagará o nome em cinza do exemplo, passará o texto digitado pelo usuário para regular e com a cor preto.
    private void jTextFieldNomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNomeFocusGained
        jTextFieldNome.setText("");
        jTextFieldNome.setFont(getFont().deriveFont(Font.PLAIN));
        jTextFieldNome.setForeground(Color.BLACK);
    }//GEN-LAST:event_jTextFieldNomeFocusGained
    //Se o usuário mudar de campo com o TAB, ao invés do Mouse, ocorrerá o mesmo evento do MouseClicked.
    //Apagará o nome em cinza do exemplo, passará o texto digitado pelo usuário para regular e com a cor preto.
    private void jTextFieldCargaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCargaFocusGained
        jTextFieldCarga.setText("");
        jTextFieldCarga.setFont(getFont().deriveFont(Font.PLAIN));
        jTextFieldCarga.setForeground(Color.BLACK);
    }//GEN-LAST:event_jTextFieldCargaFocusGained
    //Se o usuário mudar de campo com o TAB, ao invés do Mouse, ocorrerá o mesmo evento do MouseClicked.
    //Apagará o nome em cinza do exemplo, passará o texto digitado pelo usuário para regular e com a cor preto.
    private void jTextFieldCursoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCursoFocusGained
        jTextFieldCurso.setText("");
        jTextFieldCurso.setFont(getFont().deriveFont(Font.PLAIN));
        jTextFieldCurso.setForeground(Color.BLACK);
    }//GEN-LAST:event_jTextFieldCursoFocusGained
    //Apagará o nome em cinza do exemplo, passará o texto digitado pelo usuário para regular e com a cor preto.
    private void jTextFieldVagasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldVagasMouseClicked
        jTextFieldVagas.setText("");
        jTextFieldVagas.setFont(getFont().deriveFont(Font.PLAIN));
        jTextFieldVagas.setForeground(Color.BLACK);
    }//GEN-LAST:event_jTextFieldVagasMouseClicked
    //Após o cursor sair do campo que estava, e este campo não foi preenchido pelo usuário, voltará o exemplo de como o usuário deve digitar, mas com a borda vermelha, como um aviso.
    //E ao voltar e digitar, o campo voltará a sua cor original.
    private void jTextFieldVagasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldVagasFocusLost
        if(jTextFieldVagas.getText().isEmpty()) {
        jTextFieldVagas.setText("Ex.: 100");
        jTextFieldVagas.setFont(getFont().deriveFont(Font.ITALIC));
        jTextFieldVagas.setForeground(Color.GRAY);
    }
        if(jTextFieldVagas.getText().equals("Ex.: 100")){
          jTextFieldVagas.setBorder(new LineBorder(Color.RED)); 
        }else{
            jTextFieldVagas.getText();
            jTextFieldVagas.setBorder(MetalBorders.getDesktopIconBorder());
        }
    }//GEN-LAST:event_jTextFieldVagasFocusLost
    //Se o usuário mudar de campo com o TAB, ao invés do Mouse, ocorrerá o mesmo evento do MouseClicked.
    //Apagará o nome em cinza do exemplo, passará o texto digitado pelo usuário para regular e com a cor preto.
    private void jTextFieldVagasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldVagasFocusGained
        jTextFieldVagas.setText("");
        jTextFieldVagas.setFont(getFont().deriveFont(Font.PLAIN));
        jTextFieldVagas.setForeground(Color.BLACK);
    }//GEN-LAST:event_jTextFieldVagasFocusGained
    //Sairá do programa ao apertar o Cancelar.
    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed
    //O campo aceitará apenas números.
    private void jTextFieldCargaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCargaKeyTyped
    String caracteres="0987654321";
    if(!caracteres.contains(evt.getKeyChar()+"")){
    evt.consume();
}
    }//GEN-LAST:event_jTextFieldCargaKeyTyped
    //O campo aceitará apenas letras, acentos.
    private void jTextFieldNomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomeKeyTyped
    String caracteres="0987654321";
    if(caracteres.contains(evt.getKeyChar()+"")){
    evt.consume();
}
    }//GEN-LAST:event_jTextFieldNomeKeyTyped
    //O campo aceitará apenas letras, acentos.
    private void jTextFieldCursoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCursoKeyTyped
    String caracteres="0987654321";
    if(caracteres.contains(evt.getKeyChar()+"")){
    evt.consume();
}
    }//GEN-LAST:event_jTextFieldCursoKeyTyped
    //O campo aceitará apenas números.
    private void jTextFieldVagasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldVagasKeyTyped
    String caracteres="0987654321";
    if(!caracteres.contains(evt.getKeyChar()+"")){
    evt.consume();
}
    }//GEN-LAST:event_jTextFieldVagasKeyTyped
    //Quando o usuário apertar o OK, estas condições irão verificar se existem campos sem preencher e os que estiverem ficarão com a borda vermelha, 
    //aparecerá "Campo Obrigatório" próximo ao campo Período e a mensagem "Existe(m) dados não informados." 
    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        if(jTextFieldNome.getText().equals("Ex.: Lógica")){
            jTextFieldNome.setBorder(new LineBorder(Color.RED));
        }if(jTextFieldCarga.getText().equals("Ex.: 100")){ 
            jTextFieldCarga.setBorder(new LineBorder(Color.RED));
        }if(jTextFieldCurso.getText().equals("Ex.: Ciências da Computação")){
            jTextFieldCurso.setBorder(new LineBorder(Color.RED));
        }if(jTextFieldVagas.getText().equals("Ex.: 100")){
            jTextFieldVagas.setBorder(new LineBorder(Color.RED));
        }if(((String)jComboBoxPeriodo.getSelectedItem()).equals("--")){
            jLabelCampo.setText("*Campo Obrigatório");
            jLabelCampo.setForeground(Color.RED);
        }if(jComboBoxPeriodo.getSelectedItem().equals("Manhã") || jComboBoxPeriodo.getSelectedItem().equals("Tarde") || jComboBoxPeriodo.getSelectedItem().equals("Noite")){
            jLabelCampo.setText("");
        }if(jTextFieldNome.getText().equals("Ex.: Lógica") || jTextFieldCarga.getText().equals("Ex.: 100") || jTextFieldCurso.getText().equals("Ex.: Ciências da Computação") 
        || jTextFieldVagas.getText().equals("Ex.: 100") || ((String)jComboBoxPeriodo.getSelectedItem()).equals("--")){
        JOptionPane.showMessageDialog(rootPane,"Existe(m) dados não informados.", "ERRO!",JOptionPane.ERROR_MESSAGE);
        }
        //Após digitar os campos que faltam, os campos retornam a cor original. Ao apertar o salvar, novamente, essa condição tentará se conectar ao BD e lançar as informações
        //digitadas no BD, a mensagem "Campo Obrigatório" desaparecerá, se o período foi selecionado. E a mensagem de confirmação do cadastro aparecerá.
        else{
            try {
               String banco = "insert into disciplinas (nome, cargahoraria, curso, numerovagas, periodo) values ('"+jTextFieldNome.getText()+"', "
                        + "'"+jTextFieldCarga.getText()+"','"+jTextFieldCurso.getText()+"','"+jTextFieldVagas.getText()+"','"+jComboBoxPeriodo.getSelectedItem()+"')";
                Connection conexao = ConexaoMySQL.getInstance().getConnection();
                conexao.createStatement().executeUpdate(banco);
                JOptionPane.showMessageDialog(rootPane,"Disciplina" + " " + jTextFieldNome.getText() + " " + "cadastrada com sucesso!", "CONFIRMAÇÃO!",JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException ex) {
              ex.printStackTrace();
            }
    }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroJavaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroJavaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroJavaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroJavaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroJavaFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox<String> jComboBoxPeriodo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelCampo;
    private javax.swing.JTextField jTextFieldCarga;
    private javax.swing.JTextField jTextFieldCurso;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldVagas;
    // End of variables declaration//GEN-END:variables
}
